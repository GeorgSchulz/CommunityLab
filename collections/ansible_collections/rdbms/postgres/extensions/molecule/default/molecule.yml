---
scenario:
  name: default
  test_sequence:
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - verify
    - cleanup
    - converge
    - destroy
dependency:
  name: galaxy
  options:
    requirements-file: requirements.yml
platforms:
  - name: instance-1
    image: docker.io/geerlingguy/docker-ubuntu2404-ansible
    command: /usr/lib/systemd/systemd
    pre_build_image: true
    cgroupns_mode: host
    ipv4_address: 172.23.27.3
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - /var/lib/containerd
provisioner:
  name: ansible
  log: false
  options:
    vvv: false
  playbooks:
    converge: converge.yml
  inventory:
    group_vars:
      all:
        molecule_deployment: true
        self_signed_certificates: true
        tls_external: false
        domain: example.com
      postgres:
        tls_user: root
        tls_group: root
        certs_source:
          - /opt/selfsigned/{{ ansible_fqdn }}/cert.pem
          - /opt/selfsigned/{{ ansible_fqdn }}/RootCA.pem
          - /opt/selfsigned/{{ ansible_fqdn }}/key.pem
        distribute_certs_mode:
          - "0660"
          - "0660"
          - "0400"
        certs_dest_postgres:
          - cert_postgres.pem
          - chain_postgres.pem
          - key_postgres.pem
        cert_file_postgres: /etc/ssl/private/cert_postgres.pem
        key_file_postgres: /etc/ssl/private/key_postgres.pem
        chain_file_postgres: /etc/ssl/private/chain_postgres.pem
        postgres_host: ""
        postgres_schemes:
          - username: jupyterhub
            database: jupyterhub
            password: changeit
            port: 5432
            hostname: "*"
            scheme: jupyterhub
