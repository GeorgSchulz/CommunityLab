- name: gather package facts
  package_facts:
    manager: auto

- name: install PostgreSQL
  block:
    - name: install required packages
      apt:
        name:
          - "wget"
          - "python3-psycopg2"
          - "acl"
        state: latest
    
    - name: set up PostgreSQL 14 repo
      copy:
        content: "deb http://apt.postgresql.org/pub/repos/apt {{ ansible_distribution_release }}-pgdg main"
        dest: "/etc/apt/sources.list.d/pgdg.list"
    
    - name: add apt signing key
      apt_key:
        url: "https://www.postgresql.org/media/keys/ACCC4CF8.asc"
        state: present
    
    - name: install PostgreSQL 14
      failed_when: false
      apt:
        name: "postgresql-14"
        state: latest
        update_cache: yes
  when: "'postgresql-14' not in ansible_facts.packages"

- name: install virtualenv
  apt:
    name: "virtualenv"
    state: present

- name: copy requirements.txt 
  copy:
    src: "requirements.txt"
    dest: "/tmp/requirements.txt"
    owner: "postgres"

- name: install requirements for patroni in virtualenv
  pip:
    requirements: "/tmp/requirements.txt"
    virtualenv: "/usr/lib/postgresql/14/venv"

- name: change owner of virtualenv to postgres user
  file:
    path: "/usr/lib/postgresql/14/venv"
    state: directory
    owner: "postgres"
    group: "postgres"
    recurse: yes

- name: copy .pgpass file to postgres home directory
  copy:
    content: |
      {% for item in postgres %}
      {{ item.hostname }}:{{ item.port }}:{{ item.database }}:{{ item.username }}:{{ item.password }}
      {% endfor %}
    dest: "/var/lib/postgresql/.pgpass"
    owner: "postgres"
    group: "postgres"
    mode: "0400"

- name: add postgres user to group ssl-cert
  user: 
   name: "postgres"
   group: "postgres"
   shell: "/bin/bash"
   groups: "ssl-cert"
   append: yes

- name: copy cert, fullchain and private key for PostgreSQL cluster
  copy:
    src: "{{ item.0 }}"
    dest: "/etc/ssl/private/{{ item.1 }}"
    owner: "postgres"
    group: "ssl-cert"
    mode: "{{ item.2 }}"
  with_together: 
    - "{{ certs_source }}"
    - "{{ certs_dest_postgres }}"
    - "{{ certs_mode }}"
  loop_control:
    label: "{{ item.1 }}"
  when: custom_inventory_file is not defined

- name: change ownership and mode if external TLS is provided
  file:
    path: "{{ item.0 }}"
    owner: "postgres"
    group: "ssl-cert"
    mode: "{{ item.1 }}"
  with_together: 
    - "{{ ssl_files }}"
    - "{{ ssl_mode }}"
  loop_control:
    label: "{{ item.0 }}"
  when: custom_inventory_file is defined

- name: add softdog module
  modprobe:
    name: "softdog"
    state: present

- name: change ownership of /dev/watchdog
  file:
    path: "/dev/watchdog"
    owner: "postgres"
    group: "postgres"

- name: copy patroni.yml
  template:
    src: "patroni.yml"
    dest: "/etc/patroni.yml"
    owner: "postgres"
    group: "postgres"

- name: delete present PostgreSQL data    
  block:
    - name: delete PostgreSQL data for Patroni to initialize
      file:
        path: "/var/lib/postgresql/14/main"
        state: absent
    
    - name: create PostgreSQL data folder
      file:
        path: "/var/lib/postgresql/14/main"
        state: directory
        owner: "postgres"
        group: "postgres"
        mode: "0700"
  when: "'postgresql-14' not in ansible_facts.packages"

- name: copy systemd unit for patroni
  template:
    src: "patroni.service"
    dest: "/etc/systemd/system/patroni.service"
