- name: Gather package facts
  ansible.builtin.package_facts:
    manager: auto

- name: Only execute if ldap server is already installed
  when: "'slapd' in ansible_facts.packages"
  block:
    - name: Get service status of ldap
      ansible.builtin.systemd:
        name: "slapd"
      register: ldap_service_status

    - name: Only execute check if ldap service is active
      when: ldap_service_status.status.ActiveState == "active"
      block:
        - name: Check if IDE users are added to IDE group
          ansible.builtin.shell: "ldapsearch -H ldapi:/// -Y EXTERNAL -LLL -b \"{{ ldap_organization }}\" filter uid | grep uid:"
          register: ldap_search

        - name: Print message depending on ldap check for one ldap server
          ansible.builtin.assert:
            that: ldap_search.stdout_lines | length == ldap_users | length
            fail_msg: "Not all IDE users are added to 'cn={{ ide_users_group }},ou=groups,{{ ldap_organization }}', check Logs for more information"
            success_msg: "All IDE users are added to 'cn={{ ide_users_group }},ou=groups,{{ ldap_organization }}'"
          when: groups.securities | length == 1

        - name: Print message depending on ldap check for two ldap servers
          ansible.builtin.assert:
            that: ldap_search.stdout_lines | length == ldap_users | length + 2
            fail_msg: "Not all IDE users are added to 'cn={{ ide_users_group }},ou=groups,{{ ldap_organization }}', check Logs for more information"
            success_msg: "All IDE users are added to 'cn={{ ide_users_group }},ou=groups,{{ ldap_organization }}'"
          when: groups.securities | length == 2

        - name: Set fact when all LDAP users are present
          ansible.builtin.set_fact:
            ldap_users_present: true

        - name: Only execute if two ldap server are present
          when: groups.securities | length == 2
          block:
            - name: Check if ldap standard replication is active
              ansible.builtin.command: "ldapsearch -z1 -LLL -x -s base -b {{ ldap_organization }} contextCSN"
              register: ldap_search_context

            - name: Print message depending on ldap replication check
              ansible.builtin.assert:
                that:
                  - ldap_search_context.stdout_lines | length == 2
                  - ldap_search_context.rc == 0
                fail_msg: "LDAP standard replicaiton is not active, check Logs for more information"
                success_msg: "LDAP standard replication is configured and active: {{ ldap_search_context.stdout_lines }}"

            - name: Set fact when LDAP standard replication is configured and active
              ansible.builtin.set_fact:
                ldap_replication_configured: true
