---
- name: Create hadoop group
  become: true
  ansible.builtin.group:
    name: "{{ setup_hdfs_group }}"
    gid: "{{ setup_hdfs_gid }}"
    state: present

- name: Create hdfs user
  become: true
  ansible.builtin.user:
    name: "{{ setup_hdfs_user }}"
    comment: User for Apache Hadoop
    uid: "{{ setup_hdfs_uid }}"
    group: "{{ setup_hdfs_gid }}"
    state: present
    shell: /bin/bash

- name: Create HDFS keytab
  when:
    - kerberos_external is defined
    - not kerberos_external
  ansible.builtin.include_role:
    name: authentication.kerberos.keytab
  vars:
    kerberos_keytabs:
      - principal: "{{ hdfs_user }}"
        keytab_user: "{{ hdfs_user }}"
      - principal: HTTP
        keytab_user: "{{ hdfs_user }}"

- name: Create hadoop configuration and log folder
  ansible.builtin.file:
    path: "{{ item.name }}"
    state: directory
    owner: "{{ setup_hdfs_user }}"
    group: "{{ setup_hdfs_group }}"
    mode: "{{ item.mode }}"
  loop:
    - name: "{{ setup_hadoop_conf_dir }}"
      mode: "0755"
    - name: "{{ setup_hadoop_log_dir }}"
      mode: "0775"
  loop_control:
    label: "{{ item.name }}"

- name: Get hadoop tarball
  ansible.builtin.get_url:
    url: https://archive.apache.org/dist/hadoop/common/hadoop-{{ setup_hadoop_version }}/hadoop-{{ setup_hadoop_version }}.tar.gz
    dest: /var/tmp/hadoop-{{ setup_hadoop_version }}.tar.gz
    mode: "0644"

- name: Unpack hadoop tarball
  ansible.builtin.unarchive:
    copy: false
    src: /var/tmp/hadoop-{{ setup_hadoop_version }}.tar.gz
    dest: "{{ setup_hadoop_conf_dir }}"
    owner: "{{ setup_hdfs_user }}"
    group: "{{ setup_hdfs_group }}"
    creates: /opt/apache-hadoop/hadoop-{{ setup_hadoop_version }}

- name: Create symbolic link
  ansible.builtin.file:
    src: "{{ setup_hadoop_conf_dir }}/hadoop-{{ setup_hadoop_version }}"
    dest: "{{ setup_hadoop_conf_dir }}/hadoop"
    state: link
    owner: "{{ setup_hdfs_user }}"
    group: "{{ setup_hdfs_group }}"

- name: Copy relevant sites
  ansible.builtin.template:
    src: "{{ item }}"
    dest: /opt/apache-hadoop/hadoop/etc/hadoop/{{ item }}
    owner: "{{ setup_hdfs_user }}"
    group: "{{ setup_hdfs_group }}"
    mode: "0644"
  loop:
    - ssl-server.xml
    - ssl-client.xml

- name: Template core-site.xml
  ansible.builtin.template:
    src: "{{ setup_core_site_name }}"
    dest: /opt/apache-hadoop/hadoop/etc/hadoop/core-site.xml
    owner: "{{ setup_hdfs_user }}"
    group: "{{ setup_hdfs_group }}"
    mode: "0644"

- name: Copy hadoop-env.sh
  ansible.builtin.template:
    src: hadoop-env.sh
    dest: /opt/apache-hadoop/hadoop/etc/hadoop/hadoop-env.sh
    owner: "{{ setup_hdfs_user }}"
    group: "{{ setup_hdfs_group }}"
    mode: "0644"

- name: Generate secret key used for signing authentication tokens
  ansible.builtin.command: dd if=/dev/urandom of={{ keytab_folder }}/hadoop_secret bs=1024 count=1
  changed_when: false

- name: Change permissions of generated secret key
  ansible.builtin.file:
    path: "{{ keytab_folder }}/hadoop_secret"
    owner: "{{ setup_hdfs_user }}"
    group: "{{ setup_hdfs_group }}"
    mode: "0440"
