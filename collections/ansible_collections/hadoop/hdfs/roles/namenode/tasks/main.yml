---
- name: Configure HDFS ZKFC
  ansible.builtin.include_tasks: configure-zkfc.yml
  when:
    - groups.namenodes | length == 3

- name: Configure HDFS namenode
  ansible.builtin.include_tasks: configure-namenode.yml

- name: Set fact for initializing process
  ansible.builtin.set_fact:
    namenode_hdfs_data_dir_current: "{{ namenode_hdfs_data_dir + '/namenode/storage1/current' if groups.namenodes | length == 3 else namenode_hdfs_data_dir + '/namenode/current'
      }}"

- name: Check HDFS is already initialized
  ansible.builtin.stat:
    path: "{{ namenode_hdfs_data_dir_current }}"
  register: namenode_initialized_dir

- name: Enable HDFS ZKFC
  ansible.builtin.systemd_service:
    name: hdfs-zkfc.service
    enabled: true
  when:
    - groups.namenodes | length == 3

- name: Enable HDFS namenode
  ansible.builtin.systemd_service:
    name: hdfs-namenode.service
    enabled: true

- name: Stop HDFS namenode
  ansible.builtin.systemd_service:
    name: hdfs-namenode.service
    state: stopped

- name: Stop HDFS ZKFC
  ansible.builtin.systemd_service:
    name: hdfs-zkfc.service
    state: stopped
  when:
    - groups.namenodes | length == 3

- name: Format HDFS ZKFC
  become: true
  become_user: "{{ hdfs_user }}"
  ansible.builtin.command: /opt/apache-hadoop/hadoop/bin/hdfs zkfc -formatZK -force
  when:
    - "'namenode1' in group_names"
    - not namenode_initialized_dir.stat.exists
    - groups.namenodes | length == 3

- name: Format HDFS namenode
  become: true
  become_user: "{{ hdfs_user }}"
  ansible.builtin.command: /opt/apache-hadoop/hadoop/bin/hdfs namenode -format -force
  when:
    - "'namenode1' in group_names"
    - not namenode_initialized_dir.stat.exists

- name: Start HDFS ZKFC
  ansible.builtin.systemd_service:
    name: hdfs-zkfc.service
    state: started
  when:
    - groups.namenodes | length == 3

- name: Start HDFS namenode
  ansible.builtin.systemd_service:
    name: hdfs-namenode.service
    state: started
  when: "'namenode1' in group_names"

- name: Bootstrap HDFS secondary and tertiary namenode
  become: true
  become_user: "{{ hdfs_user }}"
  ansible.builtin.command: /opt/apache-hadoop/hadoop/bin/hdfs namenode -bootstrapStandby -nonInteractive -force
  when:
    - "'namenode1' not in group_names"
    - not namenode_initialized_dir.stat.exists
    - groups.namenodes | length == 3

- name: Start HDFS secondary and tertiary namenode
  ansible.builtin.systemd_service:
    name: hdfs-namenode.service
    state: started
  when:
    - "'namenode1' not in group_names"
    - groups.namenodes | length == 3
