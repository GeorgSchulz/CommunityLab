---
scenario:
  name: default
  test_sequence:
    - cleanup
    - destroy
    - syntax
    - create
    - prepare
    - converge
    - verify
    - cleanup
    - converge
    - destroy
dependency:
  name: galaxy
  options:
    requirements-file: requirements.yml
platforms:
  - name: instance-1
    image: docker.io/geerlingguy/docker-ubuntu2404-ansible
    command: /usr/lib/systemd/systemd
    pre_build_image: true
    cgroupns_mode: host
    ipv4_address: 172.23.27.3
    privileged: true
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:rw
      - /var/lib/containerd
provisioner:
  name: ansible
  log: false
  options:
    vvv: false
  playbooks:
    converge: converge.yml
  inventory:
    group_vars:
      all:
        molecule_deployment: true
        zookeeper_user: zookeeper
        zookeeper_uid: "5001"
        zookeeper_group: zookeeper
        zookeeper_gid: "4001"
        service_user: "{{ zookeeper_user }}"
        service_name: Apache Zookeeper
        service_uid: "{{ zookeeper_uid }}"
        service_group: "{{ zookeeper_group }}"
        service_gid: "{{ zookeeper_gid }}"
        tls_user: "{{ zookeeper_user }}"
        tls_group: "{{ zookeeper_group }}"
        self_signed_certificates: true
        certs_source:
          - /tmp/selfsigned_certs/{{ ansible_fqdn }}/cert.pem
          - /tmp/selfsigned_certs/{{ ansible_fqdn }}/chain.pem
          - /tmp/selfsigned_certs/{{ ansible_fqdn }}/key.pem
        distribute_certs_dest:
          - cert.pem
          - chain.pem
          - key.pem
        distribute_certs_mode:
          - "0660"
          - "0660"
          - "0400"
        domain: example.com
        keystore_file: /etc/ssl/private/{{ ansible_fqdn }}.jks
        keystore_password: changeit
        truststore_file: /etc/ssl/certs/truststore.jks
        truststore_password: changeit
    host_vars:
      instance-1:
        zookeeper_id: 0
