global
        log /dev/log    local0
        log /dev/log    local1 notice
        chroot /var/lib/haproxy
        stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
        stats timeout 30s
        user haproxy
        group haproxy
        daemon

        # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
        log     global
        mode    http
        option  httplog
        option  dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
        errorfile 400 /etc/haproxy/errors/400.http
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

frontend postgres_frontend
    mode tcp
    bind *:5432
    option tcplog
    default_backend             postgres_backend

backend postgres_backend
    mode tcp
    option tcplog
    option httpchk
    http-check expect status 200
    default-server inter 3s fall 3 rise 2 on-marked-down shutdown-sessions
{%for host in groups.postgres %}
    server {{ hostvars[host].inventory_hostname_short }} {{ host }}:5432 maxconn 1024 check port 8008 check-ssl verify none
{% endfor %}

{% if groups.ldap is defined %}
frontend ldap_frontend_ssl
    bind 127.0.0.1:636 ssl crt {{ haproxy_pem_file }}

    mode tcp
    option tcplog
    default_backend             ldap_backend_ssl

backend ldap_backend_ssl
    mode tcp
    balance roundrobin
    option ldap-check
{% for host in groups.ldap %}
    server {{ hostvars[host].inventory_hostname_short }} {{ host }}:636 ssl check check-ssl verify none
{% endfor %}
{% endif %}

{% if groups.hubs is defined %}
frontend jupyterhub_frontend
    bind *:443 ssl crt {{ haproxy_pem_file }}
    mode http
    default_backend             jupyterhub_backend

backend jupyterhub_backend
    option forwardfor
    http-request set-header X-Client-IP %[src]
    option http-server-close
{% for host in groups.hub1 %}
    server {{ hostvars[host].inventory_hostname_short }} {{ host }}:8443 ssl check check-ssl verify none weight 40
{% endfor %}
{% if (groups.hubs | length == 2) %}
{% for host in groups.hub2 %}
    server {{ hostvars[host].inventory_hostname_short }} {{ host }}:8443 ssl check check-ssl verify none weight 20 backup
{% endfor %}
{% endif %}
{% endif %}

listen stats 
    bind *:9443 ssl crt {{ haproxy_pem_file }}
    mode http
    stats enable
    stats hide-version
    stats realm Haproxy\ Statistics
    stats uri /
    stats auth admin:{{ haproxy_admin_password }}
