# Hetzner Cloud data center, available are: Helsinki (hel1), Falkenstein (fsn1) and NÃ¼rnberg (nbg1)
hetzner_data_center: ""

hetzner_server_image: "ubuntu-20.04"

# Hetzner Cloud server definition - variable will not be used if custom inventory file is defined
# To scale IDE use option server_type
cloud_servers:
  - name: "hub1"
    server_type: "cpx31"
    server_image: "{{ hetzner_server_image }}"
    floating_ip: "hub1"
    data_center: "{{ hetzner_data_center }}"
    tls_user: "{{ jupyterhub_user }}"
    postgres_client: true
    keepalived_state: MASTER
    keepalived_virtual_router_id: 80
    keepalived_priority: 100
  - name: "hub2"
    server_type: "cpx31"
    server_image: "{{ hetzner_server_image }}"
    floating_ip: "hub2"
    data_center: "{{ hetzner_data_center }}"
    tls_user: "{{ jupyterhub_user }}"
    postgres_client: true
    keepalived_state: BACKUP
    keepalived_virtual_router_id: 80
    keepalived_priority: 99
  - name: "master1"
    server_type: "cpx41"
    server_image: "{{ hetzner_server_image }}"
    floating_ip: "master1"
    data_center: "{{ hetzner_data_center }}"
    tls_user: "{{ hdfs_user }}"
    zookeeper_id: 1
  - name: "master2"
    server_type: "cpx41"
    server_image: "{{ hetzner_server_image }}"
    floating_ip: "master2"
    data_center: "{{ hetzner_data_center }}"
    tls_user: "{{ hdfs_user }}"
    zookeeper_id: 2
  - name: "master3"
    server_type: "cpx41"
    server_image: "{{ hetzner_server_image }}"
    floating_ip: "master3"
    data_center: "{{ hetzner_data_center }}"
    tls_user: "{{ hdfs_user }}"
    zookeeper_id: 3
  - name: "worker1"
    server_type: "cpx51"
    server_image: "{{ hetzner_server_image }}"
    floating_ip: "worker1"
    data_center: "{{ hetzner_data_center }}"
    tls_user: "{{ hdfs_user }}"
    patroni_id: 1
  - name: "worker2"
    server_type: "cpx51"
    server_image: "{{ hetzner_server_image }}"
    floating_ip: "worker2"
    data_center: "{{ hetzner_data_center }}"
    tls_user: "{{ hdfs_user }}"
    patroni_id: 2
  - name: "worker3"
    server_type: "cpx51"
    server_image: "{{ hetzner_server_image }}"
    floating_ip: "worker3"
    data_center: "{{ hetzner_data_center }}"
    tls_user: "{{ hdfs_user }}"
    patroni_id: 3
  - name: "security1"
    server_type: "cpx11"
    server_image: "{{ hetzner_server_image }}"
    floating_ip: "security1"
    data_center: "{{ hetzner_data_center }}"
    tls_user: "{{ ldap_user }}"
  - name: "security2"
    server_type: "cpx11"
    server_image: "{{ hetzner_server_image }}"
    floating_ip: "security2"
    data_center: "{{ hetzner_data_center }}"
    tls_user: "{{ ldap_user }}"

# Hetzner Cloud API Token (read/write)
hetzner_api_token:

# SSH Public Key for Ansible to connect to remote machines - use absolute path
ssh_public_key_path: ""

# Domain
domain: ""

# optional:
# For using shared address for both hub nodes you have to additionally define an IP for the used subdomain. This IP will be used by the keepalived service.
# jupyterhub_domain_ip: "IP_ADDRESS_OF_SUBDOMAIN"

# Technical groups of IDE
ide_services_group: "ide_services"
ide_services_gid: "4001"
ldap_group: "{{ ide_services_group }}"
zookeeper_group: "{{ ide_services_group }}"
hdfs_group: "{{ ide_services_group }}"
yarn_group: "{{ ide_services_group }}"
jupyterhub_group: "{{ ide_services_group }}"
journalnode_group: "{{ ide_services_group }}"

technical_groups:
  - name: "{{ ide_services_group }}"
    gid: "4001"
  - name: "ssl-cert"
    gid: "4002"

# Technical user of IDE
ldap_user: "openldap"
zookeeper_user: "zookeeper"
hdfs_user: "hdfs"
yarn_user: "yarn"
jupyterhub_user: "jupyterhub"
journalnode_user: "journalnode"

technical_users:
  - name: "{{ ldap_user }}"
    uid: "5001"
    group: "{{ ldap_group }}"
    gid: "{{ ide_services_gid }}"
  - name: "{{ zookeeper_user }}"
    uid: "5002"
    group: "{{ zookeeper_group }}"
    gid: "{{ ide_services_gid }}"
  - name: "{{ hdfs_user }}"
    uid: "5003"
    group: "{{ hdfs_group }}"
    gid: "{{ ide_services_gid }}"
  - name: "{{ yarn_user }}"
    uid: "5004"
    group: "{{ yarn_group }}"
    gid: "{{ ide_services_gid }}"
  - name: "{{ jupyterhub_user }}"
    uid: "5005"
    group: "{{ jupyterhub_group }}"
    gid: "{{ ide_services_gid }}"
  - name: "{{ journalnode_user }}"
    uid: "5006"
    group: "{{ journalnode_group }}"
    gid: "{{ ide_services_gid }}"

# E-mail address that will be used by Certbot for issuing all Let's Encrypt certificates
my_email: ""

# Credentials for Java
truststore_password: ""
keystore_password: ""

# Location of issued Let's Encrypt certificates on localhost
certs_source: 
  - "/opt/letsencrypt/{{ inventory_hostname }}/cert1.pem"
  - "/opt/letsencrypt/{{ inventory_hostname }}/chain1.pem"
  - "/opt/letsencrypt/{{ inventory_hostname }}/privkey1.pem"

# Names of issued Let's Encrypt certificates on remote hosts
certs_dest:
  - "cert.pem"
  - "chain.pem"
  - "key.pem"

# Mode of issued Let's Encrypt certificates on remote hosts
certs_mode:
  - "0660"
  - "0660"
  - "0400"

# Names of Let's Encrypt certificates for PostgreSQL cluster
certs_dest_postgres:
  - "cert_postgres.pem"
  - "chain_postgres.pem"
  - "key_postgres.pem"

# Parameters when connecting to LDAP server
# e.g.:
# ldap_organization: "dc=click-your-it,dc=de"
# ldap_organization_upper: "DC=click-your-it,DC=de"
ldap_password: ""
ldap_organization: ""
ldap_organization_upper: ""

# LDAP group used for IDE access
# e.g. ide_users_group: "ide_users"
# ide_users_gid: "5001"
ide_users_group: ""
ide_users_gid: ""

# LDAP users to create for IDE usage
# e.g.
#ldap_users: 
#  - name: "georg"
#    uid_number: 6000
#    gid_number: "{{ ide_users_gid }}"
#    password: SECRET1
#  - name: "elisabeth"
#    uid_number: 6001
#    gid_number: "{{ ide_users_gid }}"
#    password: SECRET2

ldap_users: 

# Kerberos
realm: ""
realm_password: ""
keytab_folder: ""

# Hadoop
hadoop_nameservice: ""

# PostgreSQL
jupyterhub_user_password: ""
postgres_user_password: ""
repl_user_password: ""

postgres:
  - username: "postgres"
    database: "postgres"
    password: "{{ postgres_user_password }}"
    port: 5432
    hostname: "*"
  - username: "jupyterhub"
    database: "jupyterhub"
    password: "{{ jupyterhub_user_password }}"
    port: 5432
    hostname: "*"
    scheme: "jupyterhub"

# HAProxy
haproxy_admin_password: ""
